declare const Swiper : any;
interface featureTypes{
    id: number,
    image: string,
    title: string,
    mileage: string,
    fill: string,
    work: string,
    price: string,
    type: string,
    category: string
}
export function fetchFeatures() {
    let cars: featureTypes[] = [];
    let selectedType: string = "All";
    let selectedCategory: string = "All";
    // Fetch Data from JSON File
    fetch("json/features.json")
      .then(response => {
        if(!response.ok){
            throw new Error(`Data not found : ${response.status}`);
        }
        return response.json();
        })
      .then((data: featureTypes[]) => { cars = data; renderCars();
      });
    // Function to Render Cars in the Swiper Slider
    function renderCars(): void {
      const sliderWrapper = document.getElementById("car-slider") as HTMLDivElement;
      if(!sliderWrapper){
        console.log('car-slider not found');
        return;
      }
      sliderWrapper.innerHTML = ""; // Clear previous slides
      const filteredCars = cars.filter(car => {
        const matchesType = selectedType === "All" || car.type === selectedType;
        const matchesCategory = selectedCategory === "All" || car.category === selectedCategory;
        return matchesType && matchesCategory;
      });
      if (filteredCars.length === 0) {
        sliderWrapper.innerHTML = "<p class='col-span-3 text-center text-gray-300'>No cars available in this category.</p>";
      } else {
        filteredCars.forEach(car => {
          const slide = document.createElement("article");
          slide.className = "swiper-slide pb-2 border  rounded-[16px] ";
          // slide.setAttribute("role", "article");
          slide.innerHTML = `
                  <figure class="relative">
                <img class=" rounded-t-[16px]  " src=${car.image} alt="${car.title}">
               
                  <i onClick="
                   
              const myIcon = document.getElementById('myBookMark-${car.id}');
              myIcon.classList.toggle('fa-solid'); " id="myBookMark-${car.id}" class="fa-regular text-blue-700 fa-bookmark absolute left-[90%] top-[10%] translate-x-[-90%] translate-y-[-10%] cursor-pointer"></i>
  
               
              </figure>
              <figcaption class="mx-5 mt-3 text-[18px] font-[500]">${car.title} <span
                  class="block text-[12px] font-[400]">4.0 D5 PowerPulse Momentum AWâ€¦</span></figcaption>
              <hr class=" my-1 mx-3">
              <div class="flex justify-between mx-5 mt-4  items-center">
                <p class="text-[13px] mx-auto ">
                  <svg  class="mx-auto hover:rotate-12" width="19" height="16" viewBox="0 0 19 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                      d="M18.9502 9.85946C18.9502 11.8995 18.3502 13.7195 17.1502 15.3195C17.0302 15.4795 16.8702 15.5695 16.6702 15.5895C16.4702 15.6095 16.2902 15.5595 16.1302 15.4395C15.9702 15.3195 15.8802 15.1695 15.8602 14.9895C15.8402 14.8095 15.8902 14.6395 16.0102 14.4795C17.0502 13.1195 17.5702 11.5795 17.5702 9.85946C17.5702 8.49946 17.2302 7.23946 16.5502 6.07946C15.8702 4.91947 14.9402 3.99946 13.7602 3.31946C12.5802 2.63946 11.3102 2.29947 9.9502 2.29947C8.5902 2.29947 7.3202 2.63946 6.1402 3.31946C4.9602 3.99946 4.0302 4.91947 3.3502 6.07946C2.6702 7.23946 2.3302 8.49946 2.3302 9.85946C2.3302 11.5795 2.8502 13.1195 3.8902 14.4795C4.0102 14.6395 4.0602 14.8095 4.0402 14.9895C4.0202 15.1695 3.9302 15.3195 3.7702 15.4395C3.6102 15.5595 3.4302 15.6095 3.2302 15.5895C3.0302 15.5695 2.8702 15.4795 2.7502 15.3195C1.5502 13.7195 0.950195 11.8995 0.950195 9.85946C0.950195 8.25946 1.3502 6.76946 2.1502 5.38946C2.9502 4.00946 4.0402 2.91947 5.4202 2.11946C6.8002 1.31946 8.31019 0.919465 9.9502 0.919465C11.5902 0.919465 13.1002 1.31946 14.4802 2.11946C15.8602 2.91947 16.9502 4.00946 17.7502 5.38946C18.5502 6.76946 18.9502 8.25946 18.9502 9.85946ZM14.3902 5.65946C14.5502 5.77946 14.6302 5.93946 14.6302 6.13946C14.6302 6.33946 14.5502 6.49946 14.3902 6.61946L12.1102 8.95946C12.3102 9.31946 12.4102 9.69946 12.4102 10.0995C12.4102 10.7795 12.1702 11.3595 11.6902 11.8395C11.2102 12.3195 10.6302 12.5595 9.9502 12.5595C9.2702 12.5595 8.6902 12.3195 8.2102 11.8395C7.7302 11.3595 7.4902 10.7795 7.4902 10.0995C7.4902 9.41946 7.7302 8.83946 8.2102 8.35946C8.6902 7.87946 9.2702 7.63946 9.9502 7.63946C10.3502 7.63946 10.7302 7.73946 11.0902 7.93946L13.4302 5.65946C13.5502 5.49946 13.7102 5.41947 13.9102 5.41947C14.1102 5.41947 14.2702 5.49946 14.3902 5.65946ZM11.0302 10.0995C11.0302 9.81946 10.9202 9.57946 10.7002 9.37946C10.4802 9.17946 10.2302 9.07946 9.9502 9.07946C9.6702 9.07946 9.4202 9.17946 9.2002 9.37946C8.9802 9.57946 8.87019 9.81946 8.87019 10.0995C8.87019 10.3795 8.9802 10.6295 9.2002 10.8495C9.4202 11.0695 9.6702 11.1795 9.9502 11.1795C10.2302 11.1795 10.4802 11.0695 10.7002 10.8495C10.9202 10.6295 11.0302 10.3795 11.0302 10.0995Z"
                      fill="#050B20" />
                  </svg> <span class="block text-[13px] my-2">${car.mileage}</span>
                </p>
                <p class="text-[13px] mx-auto">
                  <svg  class="mx-auto hover:hue-rotate-15" width="18" height="19" viewBox="0 0 18 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                      d="M10.9896 3.60023C10.9896 3.44024 10.9396 3.31024 10.8396 3.21023C10.7396 3.11023 10.6096 3.06024 10.4496 3.06024H4.80961C4.64961 3.06024 4.51961 3.11023 4.41961 3.21023C4.31961 3.31024 4.26961 3.44024 4.26961 3.60023V8.10023C4.26961 8.26023 4.31961 8.40023 4.41961 8.52024C4.51961 8.64023 4.64961 8.70023 4.80961 8.70023H10.4496C10.6096 8.70023 10.7396 8.64023 10.8396 8.52024C10.9396 8.40023 10.9896 8.26023 10.9896 8.10023V3.60023ZM9.84961 7.56024H5.34961V4.20023H9.84961V7.56024ZM17.4696 4.20023L15.1896 3.12023C15.0696 3.04023 14.9296 3.02024 14.7696 3.06024C14.6096 3.10023 14.4996 3.19024 14.4396 3.33023C14.3796 3.47023 14.3696 3.62023 14.4096 3.78023C14.4496 3.94024 14.5496 4.04023 14.7096 4.08023L15.5496 4.56024L15.4896 4.74023C15.4896 5.10023 15.5996 5.42023 15.8196 5.70023C16.0396 5.98024 16.3096 6.18023 16.6296 6.30023V13.1402C16.6296 13.3002 16.5696 13.4402 16.4496 13.5602C16.3296 13.6802 16.1996 13.7402 16.0596 13.7402C15.9196 13.7402 15.7896 13.6802 15.6696 13.5602C15.5496 13.4402 15.4896 13.3002 15.4896 13.1402V8.64023C15.4896 8.00023 15.2596 7.42023 14.7996 6.90023C14.3396 6.38023 13.8296 6.06024 13.2696 5.94023V2.46023C13.2696 1.86024 13.0496 1.34023 12.6096 0.900234C12.1696 0.460236 11.6496 0.240234 11.0496 0.240234H4.26961C3.66961 0.240234 3.13961 0.460236 2.67961 0.900234C2.21961 1.34023 1.98961 1.86024 1.98961 2.46023V15.0602L1.20961 15.4802C0.969609 15.6002 0.849609 15.7602 0.849609 15.9602V17.6402C0.849609 17.8002 0.909609 17.9402 1.02961 18.0602C1.14961 18.1802 1.28961 18.2402 1.44961 18.2402H13.8096C13.9696 18.2402 14.0996 18.1802 14.1996 18.0602C14.2996 17.9402 14.3496 17.8002 14.3496 17.6402V15.9602C14.3496 15.7602 14.2496 15.6002 14.0496 15.4802L13.2696 15.0602V7.08023C13.5496 7.20023 13.7996 7.41023 14.0196 7.71023C14.2396 8.01023 14.3496 8.32023 14.3496 8.64023V13.1402C14.3496 13.6202 14.5196 14.0302 14.8596 14.3702C15.1996 14.7102 15.5996 14.8802 16.0596 14.8802C16.5196 14.8802 16.9196 14.7102 17.2596 14.3702C17.5996 14.0302 17.7696 13.6202 17.7696 13.1402V4.74023C17.7696 4.50023 17.6696 4.32023 17.4696 4.20023ZM13.2696 17.1002H1.98961V16.3202L2.82961 15.9002C3.02961 15.8202 3.12961 15.6602 3.12961 15.4202V2.46023C3.12961 2.18023 3.23961 1.93023 3.45961 1.71024C3.67961 1.49023 3.94961 1.38024 4.26961 1.38024H11.0496C11.3296 1.38024 11.5796 1.49023 11.7996 1.71024C12.0196 1.93023 12.1296 2.18023 12.1296 2.46023V15.4202C12.1296 15.6602 12.2296 15.8202 12.4296 15.9002L13.2696 16.3202V17.1002Z"
                      fill="#050B20" />
                  </svg> <span class="block text-[13px] my-2">${car.fill}</span>
                </p>
                <p class="text-[13px] mx-auto ">
               <svg class="mx-auto" width="17" height="16" viewBox="0 0 17 16" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path
    d="M2.36031 0.920547C1.80031 0.920547 1.32031 1.12055 0.920312 1.52055C0.520313 1.92055 0.320312 2.41055 0.320312 2.99055C0.320312 3.57055 0.520313 4.06055 0.920312 4.46055C1.32031 4.86055 1.80031 5.06055 2.36031 5.06055C2.92031 5.06055 3.40031 4.86055 3.80031 4.46055C4.20031 4.06055 4.40031 3.57055 4.40031 2.99055C4.40031 2.41055 4.20031 1.92055 3.80031 1.52055C3.40031 1.12055 2.92031 0.920547 2.36031 0.920547ZM2.36031 2.06055C2.60031 2.06055 2.82031 2.15055 3.02031 2.33055C3.22031 2.51055 3.32031 2.73055 3.32031 2.99055C3.32031 3.25055 3.22031 3.47055 3.02031 3.65055C2.82031 3.83055 2.60031 3.92055 2.36031 3.92055C2.12031 3.92055 1.90031 3.83055 1.70031 3.65055C1.50031 3.47055 1.40031 3.25055 1.40031 2.99055C1.40031 2.73055 1.50031 2.51055 1.70031 2.33055C1.90031 2.15055 2.12031 2.06055 2.36031 2.06055ZM2.36031 11.4205C1.80031 11.4205 1.32031 11.6205 0.920312 12.0205C0.520313 12.4205 0.320312 12.9105 0.320312 13.4905C0.320312 14.0705 0.520313 14.5605 0.920312 14.9605C1.32031 15.3605 1.80031 15.5605 2.36031 15.5605C2.92031 15.5605 3.40031 15.3605 3.80031 14.9605C4.20031 14.5605 4.40031 14.0705 4.40031 13.4905C4.40031 12.9105 4.20031 12.4205 3.80031 12.0205C3.40031 11.6205 2.92031 11.4205 2.36031 11.4205ZM2.36031 12.5605C2.60031 12.5605 2.82031 12.6505 3.02031 12.8305C3.22031 13.0105 3.32031 13.2305 3.32031 13.4905C3.32031 13.7505 3.22031 13.9705 3.02031 14.1505C2.82031 14.3305 2.60031 14.4205 2.36031 14.4205C2.12031 14.4205 1.90031 14.3305 1.70031 14.1505C1.50031 13.9705 1.40031 13.7505 1.40031 13.4905C1.40031 13.2305 1.50031 13.0105 1.70031 12.8305C1.90031 12.6505 2.12031 12.5605 2.36031 12.5605ZM8.36031 0.920547C7.80031 0.920547 7.32031 1.12055 6.92031 1.52055C6.52031 1.92055 6.32031 2.41055 6.32031 2.99055C6.32031 3.57055 6.52031 4.06055 6.92031 4.46055C7.32031 4.86055 7.80031 5.06055 8.36031 5.06055C8.92031 5.06055 9.40031 4.86055 9.80031 4.46055C10.2003 4.06055 10.4003 3.57055 10.4003 2.99055C10.4003 2.41055 10.2003 1.92055 9.80031 1.52055C9.40031 1.12055 8.92031 0.920547 8.36031 0.920547ZM8.36031 2.06055C8.60031 2.06055 8.82031 2.15055 9.02031 2.33055C9.22031 2.51055 9.32031 2.73055 9.32031 2.99055C9.32031 3.25055 9.22031 3.47055 9.02031 3.65055C8.82031 3.83055 8.60031 3.92055 8.36031 3.92055C8.12031 3.92055 7.90031 3.83055 7.70031 3.65055C7.50031 3.47055 7.40031 3.25055 7.40031 2.99055C7.40031 2.73055 7.50031 2.51055 7.70031 2.33055C7.90031 2.15055 8.12031 2.06055 8.36031 2.06055ZM8.36031 11.4205C7.80031 11.4205 7.32031 11.6205 6.92031 12.0205C6.52031 12.4205 6.32031 12.9105 6.32031 13.4905C6.32031 14.0705 6.52031 14.5605 6.92031 14.9605C7.32031 15.3605 7.80031 15.5605 8.36031 15.5605C8.92031 15.5605 9.40031 15.3605 9.80031 14.9605C10.2003 14.5605 10.4003 14.0705 10.4003 13.4905C10.4003 12.9105 10.2003 12.4205 9.80031 12.0205C9.40031 11.6205 8.92031 11.4205 8.36031 11.4205ZM8.36031 12.5605C8.60031 12.5605 8.82031 12.6505 9.02031 12.8305C9.22031 13.0105 9.32031 13.2305 9.32031 13.4905C9.32031 13.7505 9.22031 13.9705 9.02031 14.1505C8.82031 14.3305 8.60031 14.4205 8.36031 14.4205C8.12031 14.4205 7.90031 14.3305 7.70031 14.1505C7.50031 13.9705 7.40031 13.7505 7.40031 13.4905C7.40031 13.2305 7.50031 13.0105 7.70031 12.8305C7.90031 12.6505 8.12031 12.5605 8.36031 12.5605ZM14.3603 0.920547C13.8003 0.920547 13.3203 1.12055 12.9203 1.52055C12.5203 1.92055 12.3203 2.41055 12.3203 2.99055C12.3203 3.57055 12.5203 4.06055 12.9203 4.46055C13.3203 4.86055 13.8003 5.06055 14.3603 5.06055C14.9203 5.06055 15.4003 4.86055 15.8003 4.46055C16.2003 4.06055 16.4003 3.57055 16.4003 2.99055C16.4003 2.41055 16.2003 1.92055 15.8003 1.52055C15.4003 1.12055 14.9203 0.920547 14.3603 0.920547ZM14.3603 2.06055C14.6003 2.06055 14.8203 2.15055 15.0203 2.33055C15.2203 2.51055 15.3203 2.73055 15.3203 2.99055C15.3203 3.25055 15.2203 3.47055 15.0203 3.65055C14.8203 3.83055 14.6003 3.92055 14.3603 3.92055C14.1203 3.92055 13.9003 3.83055 13.7003 3.65055C13.5003 3.47055 13.4003 3.25055 13.4003 2.99055C13.4003 2.73055 13.5003 2.51055 13.7003 2.33055C13.9003 2.15055 14.1203 2.06055 14.3603 2.06055ZM14.3603 11.4205C13.8003 11.4205 13.3203 11.6205 12.9203 12.0205C12.5203 12.4205 12.3203 12.9105 12.3203 13.4905C12.3203 14.0705 12.5203 14.5605 12.9203 14.9605C13.3203 15.3605 13.8003 15.5605 14.3603 15.5605C14.9203 15.5605 15.4003 15.3605 15.8003 14.9605C16.2003 14.5605 16.4003 14.0705 16.4003 13.4905C16.4003 12.9105 16.2003 12.4205 15.8003 12.0205C15.4003 11.6205 14.9203 11.4205 14.3603 11.4205ZM14.3603 12.5605C14.6003 12.5605 14.8203 12.6505 15.0203 12.8305C15.2203 13.0105 15.3203 13.2305 15.3203 13.4905C15.3203 13.7505 15.2203 13.9705 15.0203 14.1505C14.8203 14.3305 14.6003 14.4205 14.3603 14.4205C14.1203 14.4205 13.9003 14.3305 13.7003 14.1505C13.5003 13.9705 13.4003 13.7505 13.4003 13.4905C13.4003 13.2305 13.5003 13.0105 13.7003 12.8305C13.9003 12.6505 14.1203 12.5605 14.3603 12.5605ZM1.82031 4.46055V11.9605C1.82031 12.1205 1.87031 12.2605 1.97031 12.3805C2.07031 12.5005 2.20031 12.5605 2.36031 12.5605C2.52031 12.5605 2.65031 12.5005 2.75031 12.3805C2.85031 12.2605 2.90031 12.1405 2.90031 12.0205V4.46055C2.90031 4.34055 2.85031 4.22055 2.75031 4.10055C2.65031 3.98055 2.52031 3.92055 2.36031 3.92055C2.20031 3.92055 2.07031 3.98055 1.97031 4.10055C1.87031 4.22055 1.82031 4.34055 1.82031 4.46055ZM7.82031 4.46055V11.9605C7.82031 12.1205 7.87031 12.2605 7.97031 12.3805C8.07031 12.5005 8.20031 12.5605 8.36031 12.5605C8.52031 12.5605 8.65031 12.5005 8.75031 12.3805C8.85031 12.2605 8.90031 12.1405 8.90031 12.0205V4.46055C8.90031 4.34055 8.85031 4.22055 8.75031 4.10055C8.65031 3.98055 8.52031 3.92055 8.36031 3.92055C8.20031 3.92055 8.07031 3.98055 7.97031 4.10055C7.87031 4.22055 7.82031 4.34055 7.82031 4.46055ZM13.8203 4.46055V7.46055C13.8203 7.54055 13.8003 7.60055 13.7603 7.64055C13.7203 7.68055 13.6803 7.70055 13.6403 7.70055H2.36031C2.20031 7.70055 2.07031 7.75055 1.97031 7.85055C1.87031 7.95055 1.82031 8.08055 1.82031 8.24055C1.82031 8.40055 1.87031 8.53055 1.97031 8.63055C2.07031 8.73055 2.20031 8.78055 2.36031 8.78055H13.6403C14.0003 8.78055 14.3003 8.66055 14.5403 8.42055C14.7803 8.18055 14.9003 7.86055 14.9003 7.46055V4.52055C14.9003 4.36055 14.8503 4.22055 14.7503 4.10055C14.6503 3.98055 14.5203 3.92055 14.3603 3.92055C14.2003 3.92055 14.0703 3.98055 13.9703 4.10055C13.8703 4.22055 13.8203 4.34055 13.8203 4.46055Z"
    fill="#050B20" />
  </svg>
                  <span class="block text-[13px] my-2">${car.work}</span>
                </p>
              </div>
              <hr class=" my-1 mx-3">
              <div class="flex justify-between my-1 items-center mx-5 pt-[9px]">
                <h1 class="text-[18px]  font-[500]">${car.price}</h1>
                <a href="#" class=" text-[13px] font-[500]  text-[#405FF2] lg:text-end md:text-end "> View Deatils
                  <i class="fa-solid fa-arrow-right text-[#405FF2]  -rotate-45 text-[13px] "></i></a>
              </div>
              `;
          sliderWrapper.appendChild(slide);
  
        });
  
      }
      // Reinitialize Swiper after adding new slides
      const swiper = new Swiper(".swiper-container", {
        a11y: false, // Disable ARIA roles
        slidesPerView: 1,
        spaceBetween: 20,
        loop: true,
        autoplay: false,
        allowTouchMove: true,
        navigation: {
          nextEl: "#next1",
          prevEl: "#prev1",
      },
        breakpoints: {
          768: { slidesPerView: 2 },
          1024: { slidesPerView: 3 }
        }
      });
      const myNext1 = document.getElementById('next1') as HTMLButtonElement;
const myPrev1 = document.getElementById('prev1') as HTMLButtonElement;
     myNext1.addEventListener('click', () => swiper.slideNext());
     myPrev1.addEventListener('click', () => swiper.slidePrev());
    }
    // Event Listener for Type Tabs
    document.querySelectorAll(".type-tab").forEach(btn => {
      btn.addEventListener("click", function (this: HTMLElement) {
        document.querySelectorAll(".type-tab").forEach(b => b.classList.remove("border-b-[#405FF2]", "border-4", "border-white"));
        this.classList.add("border-b-[#405FF2]", "border-4", "border-white");
        const type = this.getAttribute("data-type");
        if (type !== null) { // Type guard
          selectedType = type;
          renderCars();
        }
      });
    });
    // Event Listener for Category Tabs
    document.querySelectorAll(".category-tab").forEach(btn => {
      btn.addEventListener("click", function (this: HTMLElement) {
        document.querySelectorAll(".category-tab").forEach(b => b.classList.remove("bg-[#405FF2]", "text-white"));
        this.classList.add("bg-[#405FF2]", "text-white");
        const category = this.getAttribute("data-category");
      if (category !== null) { // Type guard
        selectedCategory = category;
        renderCars();
      }
      });
    });
  }